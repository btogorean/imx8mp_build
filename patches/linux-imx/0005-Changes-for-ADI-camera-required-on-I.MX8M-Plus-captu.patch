From e797ca9cd952e4d1da086cf8cae3b41a3324e526 Mon Sep 17 00:00:00 2001
From: Bogdan Togorean <bogdan.togorean@analog.com>
Date: Thu, 11 Mar 2021 11:35:17 +0200
Subject: [PATCH 5/5] Changes for ADI camera required on I.MX8M Plus capture
 driver

Signed-off-by: Bogdan Togorean <bogdan.togorean@analog.com>
---
 drivers/staging/media/imx/imx8-isi-cap.c       | 18 +++++++++++++++++-
 drivers/staging/media/imx/imx8-media-dev.c     |  6 +++---
 drivers/staging/media/imx/imx8-mipi-csi2-sam.c |  2 ++
 3 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/media/imx/imx8-isi-cap.c b/drivers/staging/media/imx/imx8-isi-cap.c
index 6ba5b3a86f49..2b2d73a5e1ca 100644
--- a/drivers/staging/media/imx/imx8-isi-cap.c
+++ b/drivers/staging/media/imx/imx8-isi-cap.c
@@ -105,6 +105,14 @@ struct mxc_isi_fmt mxc_isi_out_formats[] = {
 		.memplanes	= 1,
 		.colplanes	= 1,
 		.mbus_code	= MEDIA_BUS_FMT_RGB888_1X24,
+	}, {
+		.name		= "RAW12",
+		.fourcc		= V4L2_PIX_FMT_SBGGR12,
+		.depth		= { 16 },
+		.color		= MXC_ISI_OUT_FMT_RAW12,
+		.memplanes	= 1,
+		.colplanes	= 1,
+		.mbus_code	= MEDIA_BUS_FMT_SBGGR12_1X12,
 	}
 };
 
@@ -124,6 +132,12 @@ struct mxc_isi_fmt mxc_isi_src_formats[] = {
 		.depth		= { 32 },
 		.memplanes	= 1,
 		.colplanes	= 1,
+	}, {
+		.name		= "BG12",
+		.fourcc		= V4L2_PIX_FMT_SBGGR12,
+		.depth		= { 16 },
+		.memplanes	= 1,
+		.colplanes	= 1,
 	}
 };
 
@@ -169,6 +183,8 @@ struct mxc_isi_fmt *mxc_isi_get_src_fmt(struct v4l2_subdev_format *sd_fmt)
 	    sd_fmt->format.code == MEDIA_BUS_FMT_UYVY8_2X8 ||
 	    sd_fmt->format.code == MEDIA_BUS_FMT_YUYV8_2X8)
 		index = 1;
+	else if (sd_fmt->format.code == MEDIA_BUS_FMT_SBGGR12_1X12)
+		index = 2;
 	else
 		index = 0;
 	return &mxc_isi_src_formats[index];
@@ -721,7 +737,7 @@ static int mxc_isi_capture_open(struct file *file)
 	pm_runtime_get_sync(dev);
 
 	ret = v4l2_subdev_call(sd, core, s_power, 1);
-	if (ret) {
+	if (ret && ret != -ENOIOCTLCMD) {
 		dev_err(dev, "Call subdev s_power fail!\n");
 		pm_runtime_put(dev);
 		return ret;
diff --git a/drivers/staging/media/imx/imx8-media-dev.c b/drivers/staging/media/imx/imx8-media-dev.c
index 875c9e92d531..fb2b026226c5 100644
--- a/drivers/staging/media/imx/imx8-media-dev.c
+++ b/drivers/staging/media/imx/imx8-media-dev.c
@@ -883,7 +883,7 @@ static int register_sensor_entities(struct mxc_md *mxc_md)
 	struct device_node *parent = mxc_md->pdev->dev.of_node;
 	struct device_node *node, *ep, *rem;
 	struct v4l2_fwnode_endpoint endpoint;
-	struct i2c_client *client;
+	struct spi_device *client;
 	int index = 0;
 	int ret;
 
@@ -936,10 +936,10 @@ static int register_sensor_entities(struct mxc_md *mxc_md)
 		/*
 		 * Need to wait sensor driver probed for the first time
 		 */
-		client = of_find_i2c_device_by_node(rem);
+		client = of_find_spi_device_by_node(rem);
 		if (!client) {
 			v4l2_info(&mxc_md->v4l2_dev,
-				  "Can't find i2c client device for %s\n",
+				  "Can't find spi client device for %s\n",
 				  of_node_full_name(rem));
 			return -EPROBE_DEFER;
 		}
diff --git a/drivers/staging/media/imx/imx8-mipi-csi2-sam.c b/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
index 4d4896779753..2743fa685c3d 100644
--- a/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
+++ b/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
@@ -1082,7 +1082,9 @@ static int mipi_csis_set_fmt(struct v4l2_subdev *mipi_sd,
 	if (!csis_fmt) {
 		csis_fmt = &mipi_csis_formats[0];
 		mf->code = csis_fmt->code;
+		return 0;
 	}
+	state->csis_fmt = csis_fmt;
 
 	return 0;
 }
-- 
2.17.1

